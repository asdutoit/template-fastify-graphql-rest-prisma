# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --name redis-container
        # env:
        #   REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        #   REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npx prisma generate
      - name: Check MongoDB connection
        run: |
          cho "Installing mongodb package..."
          npm install mongodb
          echo "Checking MongoDB connection..."
          node -e "const { MongoClient } = require('mongodb'); MongoClient.connect(process.env.DATABASE_URL, { useUnifiedTopology: true }, (err, client) => { if (err) { console.error('Failed to connect to MongoDB:', err); process.exit(1); } else { console.log('Connected to MongoDB successfully!'); client.close(); } });"
      - run: npm test
        env:
          NODE_ENV: ${{secrets.NODE_ENV}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          REDIS_URL: ${{secrets.REDIS_URL}}
          REDIS_PORT: ${{secrets.REDIS_PORT}}
          REDIS_USERNAME: ""
          REDIS_PASSWORD: ""
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
      - run: npm run build --if-present
